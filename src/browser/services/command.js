"use strict";

import * as file from "./commands/file.js";

/**
 * The list of commands that can be executed by the application.
 */
const commands = [
    // File Commands
    {
        command: "file.new",
        label: "{{file.new}}",
        source: "{{common.system}}",
        callback: file.newFile,
        when: null,
    },
    {
        command: "file.open",
        label: "{{file.open}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.open-recent",
        label: "{{file.open-recent}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.close",
        label: "{{file.close}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.close-all",
        label: "{{file.close-all}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.save",
        label: "{{file.save}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.save-as",
        label: "{{file.save-as}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.save-a-copy",
        label: "{{file.save-a-copy}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.save-as-template",
        label: "{{file.save-as-template}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.save-with-history",
        label: "{{file.save-with-history}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.revert",
        label: "{{file.revert}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.version-history",
        label: "{{file.version-history}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.import",
        label: "{{file.import}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.place",
        label: "{{file.place}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.export",
        label: "{{file.export}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.document-setup",
        label: "{{file.document-setup}}",
        source: "{{common.system}}",
        callback: () => {},
        when: null,
    },
    {
        command: "file.exit",
        label: "{{file.exit}}",
        source: "{{common.system}}",
        callback: file.exit,
        when: null,
    },

    // Edit Commands
    {
        command: "edit.undo",
        label: "{{edit.undo}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.redo",
        label: "{{edit.redo}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.action-history",
        label: "{{edit.action-history}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.cut",
        label: "{{edit.cut}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.copy",
        label: "{{edit.copy}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste",
        label: "{{edit.paste}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special",
        label: "{{edit.paste-special}}",
        source: "{{common.system}}",
        children: [
            "edit.paste-special.paste-text-content",
            "edit.paste-special.paste-inner-html",
            "edit.paste-special.paste-outer-html",
            "edit.paste-special.paste-style",
            "edit.paste-special.paste-size",
            "edit.paste-special.paste-width",
            "edit.paste-special.paste-height",
            "edit.paste-special.paste-size-separately",
            "edit.paste-special.paste-width-separately",
            "edit.paste-special.paste-height-separately",
            "edit.paste-special.paste-before",
            "edit.paste-special.paste-after",
            "edit.paste-special.paste-first-child",
            "edit.paste-special.paste-last-child",
        ],
        // when: null,
    },
    {
        command: "edit.paste-special.paste-text-content",
        label: "{{edit.paste-special.paste-text-content}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-inner-html",
        label: "{{edit.paste-special.paste-inner-html}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-outer-html",
        label: "{{edit.paste-special.paste-outer-html}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-style",
        label: "{{edit.paste-special.paste-style}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-size",
        label: "{{edit.paste-special.paste-size}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-width",
        label: "{{edit.paste-special.paste-width}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-height",
        label: "{{edit.paste-special.paste-height}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-size-separately",
        label: "{{edit.paste-special.paste-size-separately}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-width-separately",
        label: "{{edit.paste-special.paste-width-separately}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-height-separately",
        label: "{{edit.paste-special.paste-height-separately}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-before",
        label: "{{edit.paste-special.paste-before}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-after",
        label: "{{edit.paste-special.paste-after}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-first-child",
        label: "{{edit.paste-special.paste-first-child}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.paste-special.paste-last-child",
        label: "{{edit.paste-special.paste-last-child}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.delete",
        label: "{{edit.delete}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.duplicate",
        label: "{{edit.duplicate}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.clone",
        label: "{{edit.clone}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.wrap",
        label: "{{edit.wrap}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.unwrap",
        label: "{{edit.unwrap}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.insert",
        label: "{{edit.insert}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.convert-to",
        label: "{{edit.convert-to}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move",
        label: "{{edit.move}}",
        source: "{{common.system}}",
        children: [
            "edit.move.move-to-top",
            "edit.move.move-up",
            "edit.move.move-down",
            "edit.move.move-to-bottom",
            "edit.move.outdent-up",
            "edit.move.outdent-down",
            "edit.move.indent-up",
            "edit.move.indent-down",
        ],
        // when: null,
    },
    {
        command: "edit.move.move-to-top",
        label: "{{edit.move.move-to-top}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.move-up",
        label: "{{edit.move.move-up}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.move-down",
        label: "{{edit.move.move-down}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.move-to-bottom",
        label: "{{edit.move.move-to-bottom}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.outdent-up",
        label: "{{edit.move.outdent-up}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.outdent-down",
        label: "{{edit.move.outdent-down}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.indent-up",
        label: "{{edit.move.indent-up}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.move.indent-down",
        label: "{{edit.move.indent-down}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "edit.find-and-replace",
        label: "{{edit.find-and-replace}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },

    // Layer Commands
    {
        command: "layer.group",
        label: "{{layer.group}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.ungroup",
        label: "{{layer.ungroup}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.ungroup-all",
        label: "{{layer.ungroup-all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.arrange",
        label: "{{layer.arrange}}",
        source: "{{common.system}}",
        children: [
            "layer.arrange.move-to-front",
            "layer.arrange.move-forward-one",
            "layer.arrange.move-backward-one",
            "layer.arrange.move-to-back",
        ],
        // when: null,
    },
    {
        command: "layer.arrange.move-to-front",
        label: "{{layer.arrange.move-to-front}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.arrange.move-forward-one",
        label: "{{layer.arrange.move-forward-one}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.arrange.move-backward-one",
        label: "{{layer.arrange.move-backward-one}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.arrange.move-to-back",
        label: "{{layer.arrange.move-to-back}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align",
        label: "{{layer.align}}",
        source: "{{common.system}}",
        children: [
            "layer.align.align-left",
            "layer.align.align-center",
            "layer.align.align-right",
            "layer.align.align-top",
            "layer.align.align-middle",
            "layer.align.align-bottom",
            "layer.align.space-horizontally",
            "layer.align.space-vertically",
            "layer.align.distribute-horizontally",
            "layer.align.distribute-vertically",
        ],
        // when: null,
    },
    {
        command: "layer.align.align-left",
        label: "{{layer.align.align-left}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.align-center",
        label: "{{layer.align.align-center}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.align-right",
        label: "{{layer.align.align-right}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.align-top",
        label: "{{layer.align.align-top}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.align-middle",
        label: "{{layer.align.align-middle}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.align-bottom",
        label: "{{layer.align.align-bottom}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.space-horizontally",
        label: "{{layer.align.space-horizontally}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.space-vertically",
        label: "{{layer.align.space-vertically}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.distribute-horizontally",
        label: "{{layer.align.distribute-horizontally}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.align.distribute-vertically",
        label: "{{layer.align.distribute-vertically}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.transform",
        label: "{{layer.transform}}",
        source: "{{common.system}}",
        children: [
            "layer.transform.rotate-left",
            "layer.transform.rotate-right",
            "layer.transform.flip-left",
            "layer.transform.flip-right",
        ],
        // when: null,
    },
    {
        command: "layer.transform.rotate-left",
        label: "{{layer.transform.rotate-left}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.transform.rotate-right",
        label: "{{layer.transform.rotate-right}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.transform.flip-left",
        label: "{{layer.transform.flip-left}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.transform.flip-right",
        label: "{{layer.transform.flip-right}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.lock",
        label: "{{layer.lock}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.unlock",
        label: "{{layer.unlock}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.unlock-all",
        label: "{{layer.unlock-all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.hide",
        label: "{{layer.hide}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.hide-others",
        label: "{{layer.hide-others}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.show",
        label: "{{layer.show}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "layer.show-all",
        label: "{{layer.show-all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },

    // Select Commands
    {
        command: "select.all",
        label: "{{select.all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.deselect",
        label: "{{select.deselect}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.reselect",
        label: "{{select.reselect}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.inverse",
        label: "{{select.inverse}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.parent",
        label: "{{select.parent}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same",
        label: "{{select.same}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.text-color",
        label: "{{select.same.text-color}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.fill-color",
        label: "{{select.same.fill-color}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.border-color",
        label: "{{select.same.border-color}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.transparency",
        label: "{{select.same.transparency}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.blend-mode",
        label: "{{select.same.blend-mode}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.object-type",
        label: "{{select.same.object-type}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.object-label",
        label: "{{select.same.object-label}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.same.color-tag",
        label: "{{select.same.color-tag}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object",
        label: "{{select.object}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.shapes",
        label: "{{select.object.shapes}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.artboards",
        label: "{{select.object.artboards}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.filled-objects",
        label: "{{select.object.filled-objects}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.unfilled-objects",
        label: "{{select.object.unfilled-objects}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.stroked-objects",
        label: "{{select.object.stroked-objects}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.object.unstroked-objects",
        label: "{{select.object.unstroked-objects}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.save-selection",
        label: "{{select.save-selection}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.edit-selection",
        label: "{{select.edit-selection}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "select.selection-history",
        label: "{{select.selection-history}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },

    // View Commands
    {
        command: "view.zoom",
        label: "{{view.zoom}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.zoom-in",
        label: "{{view.zoom.zoom-in}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.zoom-out",
        label: "{{view.zoom.zoom-out}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.zoom-to-fit",
        label: "{{view.zoom.zoom-to-fit}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.zoom-to-width",
        label: "{{view.zoom.zoom-to-width}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.zoom-to-selection",
        label: "{{view.zoom.zoom-to-selection}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.100-percent",
        label: "{{view.zoom.100-percent}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.200-percent",
        label: "{{view.zoom.200-percent}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.400-percent",
        label: "{{view.zoom.400-percent}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.800-percent",
        label: "{{view.zoom.800-percent}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.actual-size",
        label: "{{view.zoom.actual-size}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.zoom.pixel-size",
        label: "{{view.zoom.pixel-size}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.rotate",
        label: "{{view.rotate}}",
        source: "{{common.system}}",
        children: [
            "view.rotate.rotate-left",
            "view.rotate.rotate-right",
            "view.rotate.rotate-to-selection",
            "view.rotate.reset-rotation",
        ],
        // when: null,
    },
    {
        command: "view.rotate.rotate-left",
        label: "{{view.rotate.rotate-left}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.rotate.rotate-right",
        label: "{{view.rotate.rotate-right}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.rotate.rotate-to-selection",
        label: "{{view.rotate.rotate-to-selection}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.rotate.reset-rotation",
        label: "{{view.rotate.reset-rotation}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode",
        label: "{{view.view-mode}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.outline",
        label: "{{view.view-mode.outline}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation",
        label: "{{view.view-mode.color-simulation}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.none",
        label: "{{view.view-mode.color-simulation.none}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.protanopia",
        label: "{{view.view-mode.color-simulation.protanopia}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.deuteranopia",
        label: "{{view.view-mode.color-simulation.deuteranopia}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.tritanopia",
        label: "{{view.view-mode.color-simulation.tritanopia}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.achromatopsia",
        label: "{{view.view-mode.color-simulation.achromatopsia}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.color-simulation.contrast-loss",
        label: "{{view.view-mode.color-simulation.contrast-loss}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.force-light-scheme",
        label: "{{view.view-mode.force-light-scheme}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.force-dark-scheme",
        label: "{{view.view-mode.force-dark-scheme}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.view-mode.print-media-simulation",
        label: "{{view.view-mode.print-media-simulation}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.show-margin",
        label: "{{view.show-margin}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.customize-margin",
        label: "{{view.customize-margin}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.show-guides",
        label: "{{view.show-guides}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.lock-guides",
        label: "{{view.lock-guides}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.customize-guides",
        label: "{{view.customize-guides}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.show-grid",
        label: "{{view.show-grid}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.customize-grid",
        label: "{{view.customize-grid}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.show-rulers",
        label: "{{view.show-rulers}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.customize-rulers",
        label: "{{view.customize-rulers}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.enable-snapping",
        label: "{{view.enable-snapping}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.customize-snapping",
        label: "{{view.customize-snapping}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.presentation-mode",
        label: "{{view.presentation-mode}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.hide-selection-bounding-box",
        label: "{{view.hide-selection-bounding-box}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "view.hide-hovering-bounding-box",
        label: "{{view.hide-hovering-bounding-box}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },

    // Window Commands
    {
        command: "window.arrange",
        label: "{{window.arrange}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.arrange.float",
        label: "{{window.arrange.float}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.arrange.float-all",
        label: "{{window.arrange.float-all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.arrange.dock",
        label: "{{window.arrange.dock}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.arrange.dock-all",
        label: "{{window.arrange.dock-all}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.workspace",
        label: "{{window.workspace}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.workspace.reset-workspace",
        label: "{{window.workspace.reset-workspace}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.workspace.new-workspace",
        label: "{{window.workspace.new-workspace}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.workspace.manage-workspace",
        label: "{{window.workspace.manage-workspace}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "window.extensions",
        label: "{{window.extensions}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },

    // Help Commands
    {
        command: "help.quick-start-guide",
        label: "{{help.quick-start-guide}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.documentation",
        label: "{{help.documentation}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.show-release-notes",
        label: "{{help.show-release-notes}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.show-all-commands",
        label: "{{help.show-all-commands}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.keyboard-shortcuts",
        label: "{{help.keyboard-shortcuts}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.search-feature-requests",
        label: "{{help.search-feature-requests}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.report-issue",
        label: "{{help.report-issue}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.toggle-developer-tools",
        label: "{{help.toggle-developer-tools}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.open-process-explorer",
        label: "{{help.open-process-explorer}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.check-for-updates",
        label: "{{help.check-for-updates}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
    {
        command: "help.about",
        label: "{{help.about}}",
        source: "{{common.system}}",
        callback: () => {},
        // when: null,
    },
];

/**
 * Listen for commands and execute the callback function
 */
(function() {
    window.addEventListener("command", (event) => {
        event.detail.commands.forEach(async (name) => {
            const command = commands.find(c => c.command === name);
            if (typeof command?.callback === 'function') {
                command.callback();
            }
        });
    });
})();